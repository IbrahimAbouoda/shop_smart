import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      colorScheme: colorScheme,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              8,
            ),
          ),
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: appTheme.gray4007f,
          shape: RoundedRectangleBorder(
            side: BorderSide(
              color: colorScheme.primary,
              width: 1,
            ),
            borderRadius: BorderRadius.circular(
              16,
            ),
          ),
        ),
      ),
      textTheme: TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.blueGray400,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        labelMedium: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w700,
        ),
        bodyLarge: TextStyle(
          color: appTheme.black900,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        titleSmall: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray70002,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            32,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        labelSmall: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            8,
          ),
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w800,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            24,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        titleLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            20,
          ),
          fontFamily: 'Montserrat',
          fontWeight: FontWeight.w600,
        ),
        displaySmall: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: getFontSize(
            36,
          ),
          fontFamily: 'Abhaya Libre',
          fontWeight: FontWeight.w400,
        ),
      ),
      visualDensity: VisualDensity.standard,
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    background: Color(0XFF14FE00),
    error: Color(0X6CFFFFFF),
    errorContainer: Color(0XFF4C4C4C),
    inversePrimary: Color(0XFF14FE00),
    inverseSurface: Color(0X6CFFFFFF),
    onBackground: Color(0XFF0A13FF),
    onError: Color(0XFF263238),
    onErrorContainer: Color(0X6CFFFFFF),
    onInverseSurface: Color(0XFF263238),
    onPrimary: Color(0X6CFFFFFF),
    onPrimaryContainer: Color(0XFF0A13FF),
    onSecondary: Color(0XFF0A13FF),
    onSecondaryContainer: Color(0X6CFFFFFF),
    onSurface: Color(0XFF0A13FF),
    onSurfaceVariant: Color(0X6CFFFFFF),
    onTertiary: Color(0XFF0A13FF),
    onTertiaryContainer: Color(0X6CFFFFFF),
    outline: Color(0X6CFFFFFF),
    outlineVariant: Color(0XFF14FE00),
    primary: Color(0XFF27374D),
    primaryContainer: Color(0XFF14FE00),
    scrim: Color(0XFF14FE00),
    secondary: Color(0XFF14FE00),
    secondaryContainer: Color(0X7F27374D),
    shadow: Color(0X6CFFFFFF),
    surface: Color(0XFF14FE00),
    surfaceTint: Color(0X6CFFFFFF),
    surfaceVariant: Color(0X7F27374D),
    tertiary: Color(0XFF14FE00),
    tertiaryContainer: Color(0X7F27374D),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);
  // Blue
  Color get blue500 => Color(0XFF3497F9);
  Color get blueA200 => Color(0XFF407BFF);
  Color get blueA400 => Color(0XFF2F88FF);
  // BlueGray
  Color get blueGray100 => Color(0XFFCAC4D0);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray200 => Color(0XFF9DB2BF);
  Color get blueGray400 => Color(0XFF8E8E93);
  Color get blueGray40001 => Color(0XFF888888);
  Color get blueGray600 => Color(0XFF526D82);
  Color get blueGray700 => Color(0XFF455A64);
  Color get blueGray70001 => Color(0XFF475568);
  // DeepOrange
  Color get deepOrange200 => Color(0XFFFFBE9D);
  // DeepPurplef
  Color get deepPurple4007f => Color(0X7F6F5FAA);
  // Gray
  Color get gray100 => Color(0XFFF3F3F3);
  Color get gray10001 => Color(0XFFF4F4F4);
  Color get gray10002 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFF0F0F0);
  Color get gray20001 => Color(0XFFEBEBEB);
  Color get gray20002 => Color(0XFFEAEAEB);
  Color get gray300 => Color(0XFFE0E0E0);
  Color get gray30001 => Color(0XFFE8E0D5);
  Color get gray30002 => Color(0XFFE6E6E6);
  Color get gray30003 => Color(0XFFE8E8E3);
  Color get gray30004 => Color(0XFFDADADA);
  Color get gray400 => Color(0XFFC7CDC9);
  Color get gray50 => Color(0XFFFCFCFC);
  Color get gray500 => Color(0XFF9DA3A7);
  Color get gray700 => Color(0XFF606268);
  Color get gray70001 => Color(0XFF666666);
  Color get gray70002 => Color(0XFF5A5A5A);
  Color get gray800 => Color(0XFF4F4F51);
  Color get gray80001 => Color(0XFF505050);
  Color get gray900 => Color(0XFF252525);
  Color get gray90001 => Color(0XFF222419);
  // Grayf
  Color get gray4007f => Color(0X7FC4C4C4);
  // Indigo
  Color get indigo500 => Color(0XFF3362CC);
  Color get indigoA200 => Color(0XFF6C63FF);
  // LightGreen
  Color get lightGreen100 => Color(0XFFD3FFC8);
  // Orange
  Color get orange700 => Color(0XFFFF7A00);
  // Purple
  Color get purpleA400 => Color(0XFFDB01FF);
  // Red
  Color get red700 => Color(0XFFC83030);
  Color get redA400 => Color(0XFFFF1E1E);
  Color get redA700 => Color(0XFFFF0000);
  // Teal
  Color get teal50 => Color(0XFFDDE6ED);
  // White
  Color get whiteA700 => Color(0XFFFFFBFE);
  // Yellow
  Color get yellowA400 => Color(0XFFFEE504);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
